<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">
    <!--打开包扫描-->
    <context:component-scan base-package="com.luoyenot">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--记载外部配置文件-->
    <!--<context:property-placeholder location="classpath:db_druid.properties"/>-->
    <context:property-placeholder location="classpath:db_C3P0.properties"/>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driverClassName}"/>
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--AOP配置-->
    <aop:config>
        <aop:pointcut id="tx_pointCut" expression="execution(* com.luoyenot.service.*.*(..))"/>
        <aop:advisor advice-ref="myTx" pointcut-ref="tx_pointCut"/>
    </aop:config>

    <!-- 配置事务增强、事务属性、事务建议 -->
    <tx:advice id="myTx">
        <!-- 配置事务属性 -->
        <tx:attributes>
            <!-- 声明所有方法都是事务方法，并且指定所有方法出现异常都回滚 -->
            <tx:method name="*" rollback-for="java.lang.Exception"/>
            <!-- 配置查询方法是只读事务 -->
            <tx:method name="get*" read-only="true"/>
        </tx:attributes>
    </tx:advice>



    <!--配置MyBatis-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--指定数据源-->
        <property name="dataSource" ref="dataSource"></property>
        <!--指定全局配置文件位置-->
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
        <!--指定sql映射文件位置-->
        <property name="mapperLocations" value="classpath:mybatis/mapper/*.xml"></property>
    </bean>

    <bean id="sqlSessionBatch" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
        <constructor-arg name="executorType" value="BATCH"></constructor-arg>
    </bean>

    <!--将dao包下所有接口都配置到IOC容器中-->
    <bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.luoyenot.dao"></property>
    </bean>

</beans>